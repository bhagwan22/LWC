
# TWO WAYS
  1. use @wire service
  2. Imperative
  
1. @wire service:
─────────────────
                a. apex method need to have cacheable=true
                b. in js @wire can be link to property or method
                
                example:
                
                        import getContactList from '@salesforce/apex/controllerClass.giveContactDetailMethodName';\
                        
                        //  WIRE APEX METHOD ON FUNCTION AND PASS PARAMETER ***
                        @wire(getContactList,{paramaterName1:paramaterValue1}) handlerMethodName({error,data}){
                          if(data){
                            //ITERATE FOR RETURN VALUE IN data
                          }
                          else if(error){
                            //ITERATE FOR ERROR 
                          }
                        }
                
2. Imperative way of calling:
─────────────────────────────
                a. call apex method inside the js method that returns a js promiss
                
                  example:
                    //JS METHOD
                    handleChange(){
                        getContactList().then(return=>{
                          //SUCCESS RESULT ITERATION on return
                          // this.contacts=result;
                        }).catch(error=>{
                          // ITERATE ON error FOR ERROR
                        });
                    }
                
        ___________________________________________________________________________________________________________________________________________________________
        
IMPORTANT TO KNOW
-----------------
1. Use the Continuation class in Apex to make a long-running request to an external Web service.
Continuations use the @AuraEnabled annotation. 
Ex: @AuraEnabled(Continuation=true cacheable=true)

